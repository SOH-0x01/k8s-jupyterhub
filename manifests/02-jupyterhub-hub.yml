apiVersion: v1
kind: Service
metadata:
  name: jupyterhub
  labels:
    app: jupyterhub
    role: hub
spec:
  ports:
    - protocol: TCP
      port: 8000
  selector:
    role: hub
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyterhub-config
  labels:
    app: jupyterhub
    role: config
data:
  jupyterhub-config.py: |-
    import os
    ## HUB - General
    c.JupyterHub.base_url = '/jupyter'
    c.JupyterHub.admin_access = True
    ## SPAWNER
    c.JupyterHub.spawner_class = 'kubespawner.KubeSpawner'
    c.KubeSpawner.namespace = os.environ['POD_NAMESPACE']
    c.KubeSpawner.start_timeout = 60 * 5  # Upto 5 minutes, first pulls can be really slow
    c.KubeSpawner.hub_connect_ip = os.environ['JUPYTERHUB_SERVICE_HOST']
    c.KubeSpawner.hub_connect_port = int(os.environ['JUPYTERHUB_SERVICE_PORT'])
    c.KubeSpawner.singleuser_image_spec = 'datsci0x01/notebook'
    c.KubeSpawner.singleuser_image_pull_policy = 'IfNotPresent'
    ## SPAWNER - Storage
    c.KubeSpawner.user_storage_class = 'jupyterhub-storage'
    c.KubeSpawner.user_storage_capacity = '10Gi'
    c.KubeSpawner.pvc_name_template = 'claim-{username}'
    c.KubeSpawner.volumes = [{
        'name' : 'notebook-volume',
        'persistentVolumeClaim' : {
            'claimName' : 'claim-{username}',
        },
    }]
    c.KubeSpawner.volume_mounts = [{
        'name' : 'notebook-volume',
        'mountPath' : '/home/jovyan/work',
    }]
    ## AUTHENTICATOR - Github
    c.Authenticator.whitelist = {'mmguillen','ffgarcin','eamonnmag'}
    c.Authenticator.admin_users = {'mmguillen','ffgarcin','eamonnmag'}
    c.JupyterHub.authenticator_class = 'oauthenticator.GitHubOAuthenticator'
    c.GitHubOAuthenticator.oauth_callback_url = os.environ['OAUTH_CALLBACK_URL']
    c.GitHubOAuthenticator.client_id = os.environ['OAUTH_CLIENT_ID']
    c.GitHubOAuthenticator.client_secret = os.environ['OAUTH_CLIENT_SECRET']
---
apiVersion: v1
kind: Secret
metadata:
  name: jupyterhub-oauth-credentials
  labels:
    app: jupyterhub
    role: secret-oauth-credential
type: Opaque
data:
  client_id: ZjZmMDQxY2M1NWM2MGI0YjJkYjE=
  client_secret: NmVjMDY2MDE5Nzg1MzU2NzI0Yzg2NzllYzZjN2ExN2FhMzg3ZmE1NQ==
  callback_url: aHR0cDovL2RzMi5hbS5waWN0ZXQvanVweXRlci9odWIvb2F1dGhfY2FsbGJhY2s=
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jupyterhub
  labels:
    app: jupyterhub
    role: hub
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jupyterhub
        role: hub
    spec:
      containers:
        - name: jupyterhub
          image: datsci0x01/jupyterhub
          command:
            - jupyterhub
            - --config
            - /srv/jupyterhub/conf/jupyterhub_config.py
            - --no-ssl
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OAUTH_CALLBACK_URL
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-oauth-credentials
                  key: callback_url
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-oauth-credentials
                  key: client_id
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-oauth-credentials
                  key: client_secret
          ports:
            - name: proxy
              containerPort: 8000
          volumeMounts:
            - name: config-volume
              mountPath: /srv/jupyterhub/conf/
      volumes:
        - name: config-volume
          configMap:
            name: jupyterhub-config
            items:
              - key: jupyterhub-config.py
                path: jupyterhub_config.py
